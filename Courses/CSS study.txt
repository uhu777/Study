CSS -  HTML에 디자인을 더해주는 요소

// 예제
<head>
  <style>
    a{		= Selector
      color: red;	= Declaration
    }
    .saw {
      color:gray;
    }
    .active {
      color: red;
    }
    #active
</head>
위 방법으로 a 속성에 대한 스타일 태그 일괄 적용
- 여기서 color = property(속성) // red = value(값)

<body>
  <a href="" style="color:blue" class="saw">CSS</a>
  <a href="" style="color:blue" class="saw active">HTML</a>
  <a href="" style="color:blue" class="saw" id="active">JavaScript</a>
</body>
위와 같은 방식으로 일괄적용된 스타일 태그에 부분적 변화를 줄 수 있음

* class _ 속성들을 하나로 묶을 때 사용
// head에서 saw를 적용시 saw라는 속성값을 찾지만, .saw 즉, .을 붙이면 class 속성의 saw를 찾게됨
// class에서 특정 속성값("saw active")을 주는 것은 띄어쓰기로 작동한다. 단, 마지막 명령을 우선순위로 작동

* id _ class와 같은 형태지만, class보다 우선순위에 있음
id 속성을 부여한 태그 안에 있는 특정 태그를 불러올 때 #id태그 태그 형태로 사용
ex) #grid ol {}

**<style> 태그 우선순위
id > class > 태그
- id _ 한번에 한 속성만 사용 가능

**태그와 속성들은 중복될 시,
- 띄어쓰기 또는 콤마(,)를 사용해 간단하게 작성할 수 있다.

***CSS 스터디 정리
HTML 태그들은 자기 속성에 따라 화면 전체를 사용하기도, 자기 크기만큼 사용되기도 한다.
diplay:block; / display: inline

css box model 컨텐츠의 크기를 지정할때
text-aline: center;
※ border-width: 0px; / border-style: solid; / border-color: gray; = border: 0px solid gray;
width: 100px;
height: 100px;
※ padding(컨텐츠와 테두리 간격): 20px;
※ margin(테두리와 바깥테두리 간격): 20px;

*편하게 사용가능한 요소
※ div (block element)
※ span (inline element)

id=grid
#grid {
  display: grid;
  grid-template-columns(종으로 그리드 나눔): 150px 1fr(자동조정);
  //_grid-template-rows(횡으로 그리드 나눔) 

* @media(min(max)-width:800px) {}
_ 화면 픽셀 최소,최대 값
- 화면 변경되었을때 변화되는 태그들 작성
ex)
@media(max-width:800px){
  #gird{
    display: block;}
}
  ol{
    border-right: none;
}
  h1{
    border-bottom: none;
}


**sytle.css 파일을 따로 작성 후 각 페이지마다 링크로 불러오면
style.css가 적용된 모든 페이지의 css를 단번에 모두 수정이 가능하다!
- <Link rel="stylesheet" href="style.css">

**코딩에서 중복의 제거는 상당히 중요한 부분을 차지한다.
속성을 많이 알 수록 풍부한 표현력을 얻게되고
선택자를 많이 알 수록 속성을 정확하게 표현할 수 있게 된다.